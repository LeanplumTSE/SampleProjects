apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.android_playground"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //compile('com.leanplum:Leanplum:2.2.1') {
    //    exclude group: 'com.android.support'
    //}

    // <-- Start Leanplum Dependencies -->
    // For SDK versions 2.0.0+, if you wish to use UI Editor, you need to include
    // the UIEditor library.

    // Include for push notifcations and geolocation.

    // Option 1: Google Cloud Messaging
    // Minimum supported version is 8.3.0+.
    // Only needed if you plan to use Location.

    // Option 2: Firebase Cloud Messaging
    // Minimum supported version is 10.0.1+.
    // Only needed if you plan to use Location.
    // <-- End Leanplum Dependencies -->
    compile 'com.google.android.gms:play-services-location:11.6.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:26.1.0'
    compile 'com.leanplum:Leanplum:3.0.1'
    compile 'com.leanplum:UIEditor:3.0.1'
    compile 'com.google.firebase:firebase-messaging:11.6.0'
    testCompile 'junit:junit:4.12'
}

// Include for FCM.
apply plugin: 'com.google.gms.google-services'

// <-- End Leanplum Dependencies -->

// Set all support libraries to use version 25.4.0. Not using same versions can result in runtime errors.
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.1.0'
            }
        }
    }
}